import jsPDF from 'jspdf';

export const generateInvoicePDF = (invoice) => {
  const doc = new jsPDF();
  
  // Colors matching the website theme
  const primaryBlue = [37, 99, 235]; // blue-600
  const lightBlue = [219, 234, 254]; // blue-100
  const darkGray = [17, 24, 39]; // gray-900
  const mediumGray = [75, 85, 99]; // gray-600
  const lightGray = [243, 244, 246]; // gray-100
  
  // Header background with blue gradient effect
  doc.setFillColor(...lightBlue);
  doc.rect(0, 0, 210, 45, 'F');
  
  // Company name/logo area
  doc.setTextColor(...primaryBlue);
  doc.setFontSize(24);
  doc.setFont('helvetica', 'bold');
  doc.text('Smart AI Finance', 20, 25);
  
  // Invoice title
  doc.setTextColor(...darkGray);
  doc.setFontSize(18);
  doc.setFont('helvetica', 'bold');
  doc.text('INVOICE', 150, 25);
  
  // Reset text color for content
  doc.setTextColor(...darkGray);
  
  // Invoice details section with background
  doc.setFillColor(...lightGray);
  doc.rect(20, 55, 170, 35, 'F');
  
  doc.setFontSize(11);
  doc.setFont('helvetica', 'normal');
  doc.text('Invoice Details', 25, 65);
  
  doc.setFont('helvetica', 'bold');
  doc.text(`Invoice #:`, 25, 75);
  doc.setFont('helvetica', 'normal');
  doc.text(`${invoice.id.slice(-8).toUpperCase()}`, 55, 75);
  
  doc.setFont('helvetica', 'bold');
  doc.text(`Date:`, 25, 82);
  doc.setFont('helvetica', 'normal');
  doc.text(`${new Date(invoice.date).toLocaleDateString()}`, 45, 82);
  
  doc.setFont('helvetica', 'bold');
  doc.text(`Due Date:`, 110, 82);
  doc.setFont('helvetica', 'normal');
  doc.text(`${new Date(invoice.dueDate).toLocaleDateString()}`, 145, 82);
  
  // Client information section
  doc.setFont('helvetica', 'bold');
  doc.setFontSize(12);
  doc.setTextColor(...primaryBlue);
  doc.text('Bill To:', 20, 110);
  
  doc.setTextColor(...darkGray);
  doc.setFont('helvetica', 'normal');
  doc.setFontSize(11);
  doc.text(invoice.clientName, 20, 120);
  
  // Items table header
  const tableStartY = 140;
  doc.setFillColor(...primaryBlue);
  doc.rect(20, tableStartY, 170, 10, 'F');
  
  doc.setTextColor(255, 255, 255); // white text
  doc.setFont('helvetica', 'bold');
  doc.setFontSize(10);
  doc.text('Description', 25, tableStartY + 7);
  doc.text('Amount', 160, tableStartY + 7);
  
  // Items table content
  let yPosition = tableStartY + 20;
  doc.setTextColor(...darkGray);
  doc.setFont('helvetica', 'normal');
  
  invoice.items.forEach((item, index) => {
    // Alternate row colors for better readability
    if (index % 2 === 0) {
      doc.setFillColor(...lightGray);
      doc.rect(20, yPosition - 5, 170, 12, 'F');
    }
    
    // Item description (with text wrapping if too long)
    const description = item.description;
    const splitDescription = doc.splitTextToSize(description, 120);
    doc.text(splitDescription, 25, yPosition + 2);
    
    // Item amount
    doc.setFont('helvetica', 'bold');
    doc.text(`${invoice.currency} ${item.amount.toFixed(2)}`, 160, yPosition + 2);
    doc.setFont('helvetica', 'normal');
    
    yPosition += splitDescription.length > 1 ? 15 : 12;
  });
  
  // Total section with styling
  const totalY = yPosition + 10;
  doc.setFillColor(...lightBlue);
  doc.rect(120, totalY, 70, 15, 'F');
  
  // Total line
  doc.setLineWidth(0.5);
  doc.setDrawColor(...primaryBlue);
  doc.line(125, totalY + 5, 185, totalY + 5);
  
  doc.setFont('helvetica', 'bold');
  doc.setFontSize(12);
  doc.setTextColor(...primaryBlue);
  doc.text('TOTAL:', 125, totalY + 12);
  doc.text(`${invoice.currency} ${invoice.total.toFixed(2)}`, 160, totalY + 12);
  
  // Status badge
  const statusY = totalY + 25;
  let statusColor;
  switch (invoice.status) {
    case 'Paid':
      statusColor = [34, 197, 94]; // green-500
      break;
    case 'Overdue':
      statusColor = [239, 68, 68]; // red-500
      break;
    default:
      statusColor = [234, 179, 8]; // yellow-500
  }
  
  doc.setFillColor(...statusColor);
  doc.roundedRect(20, statusY, 30, 8, 2, 2, 'F');
  doc.setTextColor(255, 255, 255);
  doc.setFont('helvetica', 'bold');
  doc.setFontSize(9);
  doc.text(invoice.status.toUpperCase(), 22, statusY + 5.5);
  
  // Notes section if available
  if (invoice.notes) {
    const notesY = statusY + 20;
    doc.setTextColor(...mediumGray);
    doc.setFont('helvetica', 'bold');
    doc.setFontSize(10);
    doc.text('Notes:', 20, notesY);
    
    doc.setFont('helvetica', 'normal');
    doc.setFontSize(9);
    const splitNotes = doc.splitTextToSize(invoice.notes, 170);
    doc.text(splitNotes, 20, notesY + 10);
  }
  
  // Footer with branding
  const footerY = 280;
  doc.setFillColor(...lightBlue);
  doc.rect(0, footerY, 210, 17, 'F');
  
  doc.setTextColor(...primaryBlue);
  doc.setFont('helvetica', 'bold');
  doc.setFontSize(8);
  doc.text('Generated by Smart AI Finance - Privacy-focused financial management', 20, footerY + 8);
  
  doc.setFont('helvetica', 'normal');
  doc.text(`Generated on: ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}`, 20, footerY + 13);
  
  return doc;
};

export const downloadInvoice = (invoice) => {
  const doc = generateInvoicePDF(invoice);
  const fileName = `Smart-AI-Finance-Invoice-${invoice.id.slice(-8).toUpperCase()}.pdf`;
  doc.save(fileName);
};